CREATE TABLE Fornitore(
	pIVA NUMBER NOT NULL, 
	nome CHAR(50) NOT NULL,
	citta CHAR(50) NOT NULL,
	cap NUMBER,
	via VARCHAR2(50),

	CONSTRAINT FORN_PK
		PRIMARY KEY(pIVA)
);

CREATE TABLE BirraProdotta(
	numLotto NUMBER GENERATED BY DEFAULT AS IDENTITY,
	nomeBirra VARCHAR2(50) NOT NULL,
	gradoAlcolico NUMBER NOT NULL CHECK(gradoAlcolico >= 0),
	colore CHAR CHECK (colore IN ('Bionda','Rossa','Scura')),
	quantitaBirra NUMBER NOT NULL,
	
	CONSTRAINT BIRRP_PK
		PRIMARY KEY(numLotto)
);

CREATE TABLE MastroBirraio(
	ssn VARCHAR2(30) NOT NULL,
	nome CHAR(20) NOT NULL,
	cognome CHAR(20) NOT NULL,
	dataNascita DATE NOT NULL,
	dataAssunzione DATE NOT NULL,
	stipendio NUMBER NOT NULL CHECK(Stipendio >= 1000),
	
	CONSTRAINT MB_PK
		PRIMARY KEY(ssn)
);

CREATE TABLE PUB(
    particellaCatastale VARCHAR2(50) NOT NULL,
    nome CHAR(50) NOT NULL,
    citta CHAR(50) NOT NULL,
    via VARCHAR2(50) NOT NULL,
    cap NUMBER NOT NULL,
	
	CONSTRAINT PUB_PK
		PRIMARY KEY(particellaCatastale)
);

CREATE TABLE OrdineApproviggionamento(
	codFattura NUMBER NOT NULL,
	pIvaFornitore NUMBER NOT NULL,
	dataRifornimento DATE 
	metodoPagamento VARCHAR (50),
	numeroTracking VARCHAR (50),

	CONSTRAINT OAPP_PK
		PRIMARY KEY(codFattura)
	CONSTRAINT OAPP_FK_FORN
		FOREIGN KEY(pIvaFornitore) REFERENCE Fornitore(pIVA)
);

CREATE TABLE Contenitore(
	id NUMBER GENERATED BY DEFAULT AS IDENTITY,
	ssnResponsabile VARCHAR(30),
	tipo CHAR(20) CHECK(tipo IN ('bollitore' , 'fermentatore')),
	capacitaLavorazione NUMBER,
	capacitaComplessiva NUMBER,
	potenza NUMBER

	CONSTRAINT CONT_PK
		PRIMARY KEY(id)
	CONSTRAINT CONT_FK_MB
		FOREIGN KEY (ssnResponsabile) REFERENCE MastroBirraio(ssn)
);


CREATE TABLE MaltoAcquistato(
	GTIN NUMBER NOT NULL,
	codiceFattura NUMBER NOT NULL,
	idBollitore NUMBER,
	quantitaMalto NUMBER NOT NULL,
	prezzoAcq NUMBER NOT NULL,
	giacenza DATE NOT NULL,
	provenienza CHAR(50) NOT NULL,
	nomeMalto CHAR(50),
	cerealeMaltato CHAR(50) CHECK(cerealeMaltato IN ('Orzo','Segale','Frumento','Mais')),
	
	CONSTRAINT MALTOACQ_PK
		PRIMARY KEY(GTIN,codiceFattura),
	CONSTRAINT MALTOACQ_ORDER_PKFK	
		FOREIGN KEY(codiceFattura) REFERENCE OrdineApproviggionamento(codFattura),
	CONSTRAINT MALTOACQ_IDB_FK
		FOREIGN KEY(idBollitore) REFERENCE Contenitore(ID);
);

CREATE TABLE LuppoloAcquistato(
	GTIN NUMBER NOT NULL,
	codiceFattura NUMBER NOT NULL,
	quantitaLuppolo NUMBER NOT NULL,
	prezzoAcq NUMBER NOT NULL,
	giacenza DATE NOT NULL,
	provenienza CHAR(50) NOT NULL,
	tipoLuppolo CHAR(50) CHECK (tipoLuppolo IN ('Amaricante','Aromatizzante','Misto')),
	classificazione CHAR(50) NOT NULL,
	
	CONSTRAINT LUA_PK
		PRIMARY KEY(GTIN,codiceFattura)
	CONSTRAINT LUA_ORDER_PKFK
		FOREIGN KEY(codiceFattura) REFERENCE OrdineApproviggionamento(codFattura),
);

CREATE TABLE LievitoAcquistato(
	GTIN NUMBER NOT NULL,	
	codiceFattura NUMBER NOT NULL,
	quantitaLievito NUMBER NOT NULL,
	prezzoAcq NUMBER NOT NULL,
	giacenza DATE NOT NULL,
	provenienza CHAR(50) NOT NULL,
	tipoLievito CHAR(100) CHECK (tipoLievito IN ('Saccharomyces Cerevisiae','Saccharomyces Carlsbergensis')),
	
	CONSTRAINT LA_PK
		PRIMARY KEY(GTIN,codiceFattura)
	CONSTRAINT LA_ORDER_PKFK
		FOREIGN KEY(codiceFattura) REFERENCE OrdineApproviggionamento(codFattura),
);

CREATE TABLE MostoDolce(
	numLotto NUMBER GENERATED BY DEFAULT AS IDENTITY,
	gtinLuppoloUsato NUMBER NOT NULL,
	codFatturaLuppolo NUMBER NOT NULL,
	idBollitore NUMBER NOT NULL,
	quantitaLuppoloUsato NUMBER,
	gradiPlato NUMBER CHECK (Gradi_plato > 0),
	quantitaMosto NUMBER CHECK (Quantita_moato > 0),
	
	CONSTRAINT MD_PK
		PRIMARY KEY(numLotto)
	CONSTRAINT MD_LUP_FK
		FOREIGN KEY(gtinLuppoloUsato) REFERENCE LuppoloAcquistato(GTIN),
	CONSTRAINT MD_LUP_FK2
		FOREIGN KEY(codFatturaLuppolo) REFERENCE LuppoloAcquistato(GTIN),
	CONSTRAINT MD_CONT_FK
		FOREIGN KEY(idBollitore) REFERENCE Contenitore(ID)
);

CREATE TABLE Ammostamento(
	gtinMalto NUMBER NOT NULL,
	codFatturaMalto NUMBER NOT NULL, 
	idBollitore NUMBER NOT NULL,
	dataAmmostamento DATE NOT NULL,
	numLottoProdotto NUMBER NOT NULL,
	quantitaMalto NUMBER NOT NULL CHECK(Quantita_malto > 0),
	quantitaAcqua NUMBER NOT NULL CHECK(Quantita_acqua > 0),
	
	CONSTRAINT AMM_PK
		PRIMARY KEY (idBollitore,dataAmmostamento),
	CONSTRAINT AMM_FK_MALT	
		FOREIGN KEY(gtinMalto) REFERENCE MaltoAcquistato(GTIN),
	CONSTRAINT AMM_FKPK_MALT	
		FOREIGN KEY(gtinMalto) REFERENCE MaltoAcquistato(codiceFattura),
	CONSTRAINT AMM_FKPK_CONT
		FOREIGN KEY(idBollitore) REFERENCE Contenitore(ID)
);

CREATE TABLE Fermentazione(
	idFermentatore NUMBER NOT NULL
	dataInizio DATE NOT NULL,
	numLottoFermentato NUMBER,
	gtinLievitoUsato NUMBER NOT NULL,
	codFatturaLievito NUMBER NOT NULL, 
	numLottoBirraProdotta NUMBER,
	dataFine DATE,
	tipoFermentazione CHAR(20) CHECK(tipoFermentazione IN('Alta','Bassa')),
	
	CONSTRAINT FERM_PK
		PRIMARY KEY (idFermentatore,dataInizio) 
	CONSTRAINT FERM_PKFK_CONT
		FOREIGN KEY(idFermentatore) REFERENCE Contenitore(ID)
	CONSTRAINT FERM_FK_MD
		FOREIGN KEY(numLottoFermentato) REFERENCE MostoDolce(numeroLotto)
	CONSTRAINT FERM_FK_LA
		FOREIGN KEY(gtinLievitoUsato) REFERENCE LievitoAcquistato(GTIN)
	CONSTRAINT FERM_FK_LA
		FOREIGN KEY(codFatturaLievito) REFERENCE LievitoAcquistato(codiceFattura)
	CONSTRAINT FERM_FK_BIRRP
		FOREIGN KEY(numLottoBirraProdotta) REFERENCE BirraProdotta(numLotto)
);

CREATE TABLE Vendita(
    codFattura VARCHAR2(50) NOT NULL,
    metodoPagamento VARCHAR,
	particellaCatastaleCliente VARCHAR2(50),
	dataVendita DATE NOT NULL,
	
	CONSTRAINT V_PK
		PRIMARY KEY(codFattura)
	CONSTRAINT V_FK_PUB
		FOREIGN KEY(particellaCatastaleCliente) REFERENCE PUB(particellaCatastale)
);

CREATE TABLE Fusto(
    GTIN NUMBER NOT NULL,
    numLottoBirra NUMBER NOT NULL,
    codiceFatturaVendita VARCHAR2(50)
    dataConfezionamento DATE,
    prezzo NUMBER NOT NULL,
    capienza NUMBER NOT NULL,
	
    CONSTRAINT F_PK
	PRIMARY KEY(GTIN,numLottoBirra)
    CONSTRAINT F_PKFK_BIRRP
	FOREIGN KEY(numLottoBirra) REFERENCE BirraProdotta(numLotto)
    CONSTRAINT F_FK_V
	FOREIGN KEY(codiceFatturaVendita) REFERENCE Vendita(codFattura)
);

